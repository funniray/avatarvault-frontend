[{"C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\routes\\AppHeader\\AppHeader.js":"1","C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\index.js":"2","C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\routes\\Index\\Index.js":"3","C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\routes\\Search\\Search.js":"4","C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\App.js":"5","C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\Rest.js":"6","C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\components\\TagSearchBar.js":"7","C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\components\\CategorySelector.js":"8","C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\routes\\Upload\\Upload.js":"9","C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\routes\\Upload\\UploadInfoPanel.js":"10","C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\routes\\Upload\\UploadingPanel.js":"11","C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\components\\Sidebar.js":"12"},{"size":79,"mtime":1608400190850,"results":"13","hashOfConfig":"14"},{"size":500,"mtime":1607788421137,"results":"15","hashOfConfig":"14"},{"size":174,"mtime":1608477430747,"results":"16","hashOfConfig":"14"},{"size":5928,"mtime":1608511717602,"results":"17","hashOfConfig":"14"},{"size":1568,"mtime":1608477330498,"results":"18","hashOfConfig":"14"},{"size":1155,"mtime":1608500810952,"results":"19","hashOfConfig":"14"},{"size":975,"mtime":1608446788125,"results":"20","hashOfConfig":"14"},{"size":714,"mtime":1608446635132,"results":"21","hashOfConfig":"14"},{"size":3478,"mtime":1608503641181,"results":"22","hashOfConfig":"14"},{"size":7064,"mtime":1608512389845,"results":"23","hashOfConfig":"14"},{"size":1167,"mtime":1608485741621,"results":"24","hashOfConfig":"14"},{"size":2786,"mtime":1608503783998,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8x23y9",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\routes\\AppHeader\\AppHeader.js",[],"C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\index.js",[],"C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\routes\\Index\\Index.js",[],"C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\routes\\Search\\Search.js",["51"],"import React, {Suspense, useState} from \"react\";\r\nimport { memoizeOne } from 'memoize-one';\r\nimport {useLocation} from \"react-router-dom\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport TagSearchBar from \"../../components/TagSearchBar\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport Rest from \"../../Rest\";\r\nimport useFetch from \"fetch-suspense\";\r\nimport CategorySelector from \"../../components/CategorySelector\";\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {GetApp} from \"@material-ui/icons\";\r\nimport {Button, Grid, Modal, Paper, Typography} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n    const backgroundColor =\r\n        theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\r\n    return({\r\n    searchBar: {\r\n        marginTop: '10px',\r\n        width: '100%',\r\n        display: 'inline-flex'\r\n    },\r\n    selector: {\r\n        display: 'flex',\r\n        alignItems: 'middle',\r\n        width: 'calc(18% - 60px)',\r\n        margin: '10px 10px 10px 20px'\r\n    },\r\n    tags: {\r\n        display: 'inline-block',\r\n        width: '80%',\r\n        margin: '10px 20px 10px 10px',\r\n    },\r\n    searchRes: {\r\n        height: '150px',\r\n        borderBottom: '1px solid '+theme.palette.divider,\r\n        margin: '20px',\r\n        textAlign: 'left',\r\n        display: 'block',\r\n        color: theme.palette.text.primary,\r\n    },\r\n    searchImg: {\r\n        height: '120px',\r\n        width: '120px',\r\n        marginTop: 'auto',\r\n        marginBottom: 'auto',\r\n        borderRadius: '4px',\r\n    },\r\n    tag: {\r\n        display: 'inline-block',\r\n        marginLeft: '5px',\r\n        border: '1px solid transparent',\r\n        backgroundColor: backgroundColor,\r\n        borderRadius: '16px',\r\n        padding: '2px 8px 2px 8px',\r\n        fontSize: '13px',\r\n        textTransform: 'none'\r\n    },\r\n    searchResChildren: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'middle',\r\n    },\r\n    downloadButton: {\r\n        color: theme.palette.text.primary,\r\n        margin:\"auto\",\r\n        textAlign:\"right\"\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        margin: 'auto',\r\n        marginBottom: '20px',\r\n        maxHeight: '150px',\r\n        textAlign: 'left'\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n})});\r\n\r\nfunction SearchResults(props) {\r\n    let search = useFetch(Rest.searchObjects(props.category,props.tags));\r\n\r\n    return <>\r\n        <p style={{textAlign:\"right\", marginRight: \"20px\"}}>Results: {search.length}</p>\r\n        {search.map(res=><SearchResult setTags={props.setTags} key={res._id} object={res}/>)}\r\n    </>\r\n}\r\n\r\nfunction SearchResult(props) {\r\n    let classes = useStyles()\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    let img;\r\n\r\n    if (props.object.previewImage) {\r\n        img = (<div>\r\n            <Button className={`${classes.searchImg} `} style={{padding:0}} onClick={()=>setOpen(true)}>\r\n                <img style={{maxWidth:120,maxHeight:120,borderRadius:\"4px\"}} alt=\"img\" src={props.object.previewImage}/>\r\n            </Button>\r\n            <Modal open={open} onClose={()=>setOpen(false)} className={classes.modal}>\r\n                <img alt=\"img\" style={{maxHeight:\"90vh\",maxWidth:\"90vw\"}} src={props.object.previewImage}/>\r\n            </Modal>\r\n        </div>)\r\n    }\r\n\r\n    return <Paper className={classes.paper}>\r\n        <Grid container spacing={2}>\r\n        <Grid xs item>\r\n            {img}\r\n        </Grid>\r\n        <Grid xs={6} item container direction={\"column\"} justify={\"space-between\"}>\r\n            <Typography>Name: <b>{props.object.name}</b></Typography>\r\n            <Typography>Size: {(Math.ceil(props.object.fileSize/1048576))+\"MB\"}</Typography>\r\n            <Typography>Tags: {props.object.tags.map(t=>\r\n                <Button\r\n                    onClick={()=>props.setTags([t.name])}\r\n                    className={classes.tag}\r\n                    key={t._id}>\r\n                        {t.name}\r\n                </Button>\r\n            )}</Typography>\r\n        </Grid>\r\n        <Grid xs container item button className={`${classes.searchResChildren} ${classes.downloadButton}`}>\r\n            <Button href={props.object.file}>\r\n                <GetApp style={{width:\"60px\",height:\"60px\", margin:\"auto\"}}/>\r\n            </Button>\r\n        </Grid>\r\n    </Grid>\r\n    </Paper>;\r\n}\r\n\r\nfunction updateValues(t,c,l) {\r\n    let search = \"?\"\r\n\r\n    if (t.length>=1) {\r\n        search+=\"tags=\"+JSON.stringify(t)+\"&\";\r\n    }\r\n    if (c!=null) {\r\n        search+=\"category=\"+c;\r\n    }\r\n\r\n    return `${l.pathname+search}`\r\n}\r\n\r\nexport default function Search() {\r\n    let location = useLocation();\r\n    let classes = useStyles()\r\n    let params = new URLSearchParams(location.search);\r\n\r\n    let tags = JSON.parse(params.get('tags')) || [];\r\n    let category = params.get('category');\r\n\r\n    let [redirPath,updatePath] = useState(location.pathname+location.search)\r\n\r\n    let redir;\r\n    if (redirPath) redir = <Redirect push to={redirPath}/>\r\n\r\n    return (<>\r\n        <Suspense fallback={<CircularProgress/>}>\r\n            <div className={classes.searchBar}>\r\n                <div className={classes.selector}>\r\n                    <CategorySelector value={category} onChange={(e,v)=>{updatePath(updateValues(tags,v,location))}}/>\r\n                </div>\r\n                <div className={classes.tags}>\r\n                    <TagSearchBar value={tags} onChange={(e,v)=>{updatePath(updateValues(v,category,location))}}/>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n            <Suspense fallback={<CircularProgress/>}>\r\n                <SearchResults style={{display:'block'}} setTags={t=>updatePath(updateValues(t,category,location))} tags={tags} category={category}/>\r\n            </Suspense>\r\n            {redir}\r\n        </Suspense>\r\n    </>);\r\n}","C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\App.js",["52"],"C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\Rest.js",["53","54","55"],"C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\components\\TagSearchBar.js",["56"],"C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\components\\CategorySelector.js",[],"C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\routes\\Upload\\Upload.js",[],"C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\routes\\Upload\\UploadInfoPanel.js",[],"C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\routes\\Upload\\UploadingPanel.js",[],"C:\\Users\\funni\\WebstormProjects\\avatarvault-frontend\\src\\components\\Sidebar.js",[],{"ruleId":"57","severity":1,"message":"58","line":2,"column":10,"nodeType":"59","messageId":"60","endLine":2,"endColumn":20},{"ruleId":"57","severity":1,"message":"61","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":17},{"ruleId":"57","severity":1,"message":"62","line":32,"column":10,"nodeType":"59","messageId":"60","endLine":32,"endColumn":15},{"ruleId":"57","severity":1,"message":"63","line":36,"column":10,"nodeType":"59","messageId":"60","endLine":36,"endColumn":18},{"ruleId":"64","severity":1,"message":"65","line":40,"column":1,"nodeType":"66","endLine":40,"endColumn":81},{"ruleId":"57","severity":1,"message":"67","line":3,"column":23,"nodeType":"59","messageId":"60","endLine":3,"endColumn":42},"no-unused-vars","'memoizeOne' is defined but never used.","Identifier","unusedVar","'AppHeader' is defined but never used.","'login' is defined but never used.","'register' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'createFilterOptions' is defined but never used."]